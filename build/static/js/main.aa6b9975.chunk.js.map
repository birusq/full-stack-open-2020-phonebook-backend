{"version":3,"sources":["services/personService.js","components/App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Filter","handleChange","onChange","PersonForm","handleNameChange","handleNumberChange","addPerson","type","onClick","Persons","persons","filter","deleteHandler","shownPersons","person","name","toLowerCase","includes","map","key","number","Notification","notification","undefined","message","className","isError","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","setNotification","useEffect","personService","returnedPersons","showNotification","setTimeout","event","target","value","preventDefault","some","window","confirm","find","returnedPerson","catch","error","newPerson","concat","personName","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa6b9975.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n\tconst request = axios.get(baseUrl)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n\tconst request = axios.post(baseUrl, newObject)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst del = (id) => {\r\n\tconst request = axios.delete(`${baseUrl}/${id}`)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, del, update }","import React, { useState, useEffect } from 'react'\nimport personService from '../services/personService'\n\n\nconst Filter = ({ handleChange }) => (\n\t<div>filter shown with<input onChange={handleChange} /></div>\n)\n\nconst PersonForm = ({ handleNameChange, handleNumberChange, addPerson }) => (\n\t<form>\n\t\t<div>name: <input onChange={handleNameChange} /></div>\n\t\t<div>number: <input onChange={handleNumberChange} /></div>\n\t\t<div><button type='submit' onClick={addPerson}>add</button></div>\n\t</form>\n)\n\nconst Persons = ({ persons, filter, deleteHandler }) => {\n\tconst shownPersons = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\treturn (\n\t\t<div>\n\t\t\t{shownPersons.map(person =>\n\t\t\t\t<div key={person.id}>\n\t\t\t\t\t<span>{person.name} {person.number} </span>\n\t\t\t\t\t<button onClick={() => deleteHandler(person.id)}>delete</button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nconst Notification = ({ notification }) => {\n\tif (notification.message === undefined) {\n\t\treturn null\n\t}\n\n\treturn (\n\t\t<div className={notification.isError ? 'error' : 'info'}>\n\t\t\t{notification.message}\n\t\t</div>\n\t)\n}\n\n\nconst App = () => {\n\tconst [persons, setPersons] = useState([])\n\tconst [newName, setNewName] = useState('')\n\tconst [newNumber, setNewNumber] = useState('')\n\tconst [filter, setFilter] = useState('')\n\tconst [notification, setNotification] = useState({})\n\n\n\tuseEffect(() => {\n\t\tpersonService.getAll().then(returnedPersons => setPersons(returnedPersons))\n\t}, [])\n\n\tconst handleNameChange = (event) => {\n\t\tsetNewName(event.target.value)\n\t}\n\n\tconst handleNumberChange = (event) => {\n\t\tsetNewNumber(event.target.value)\n\t}\n\n\tconst showNotification = (message, isError) => {\n\t\tsetNotification({ message: message, isError: isError })\n\t\tsetTimeout(() => {\n\t\t\tsetNotification({})\n\t\t}, 5000)\n\t}\n\n\tconst addPerson = (event) => {\n\t\tevent.preventDefault()\n\t\tif (persons.some(person => person.name === newName)) {\n\t\t\tconst result = window.confirm(`${newName} is already added to phonebook, `\n\t\t\t\t+ 'replace the old number with a new one?')\n\n\t\t\tif (result) {\n\t\t\t\tlet id = persons.find(person => person.name === newName).id\n\t\t\t\tpersonService.update(id, { name: newName, number: newNumber }).then(returnedPerson => {\n\t\t\t\t\tsetPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n\t\t\t\t\tshowNotification(`Replaced ${returnedPerson.name}`, false)\n\t\t\t\t}).catch(error => {\n\t\t\t\t\tsetPersons(persons.filter(person => person.id !== id))\n\t\t\t\t\tshowNotification(`Information of ${newName} doesn't exist in server`, true)\n\t\t\t\t})\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tlet newPerson = { name: newName, number: newNumber }\n\t\tpersonService.create(newPerson).then(returnedPerson => {\n\t\t\tsetPersons(persons.concat(returnedPerson))\n\t\t\tshowNotification(`Added ${returnedPerson.name}`, false)\n\t\t}).catch(error => {\n\t\t\tshowNotification(`Couldn't add ${newPerson.name} to database`, true)\n\t\t})\n\t}\n\n\tconst deletePerson = (id) => {\n\t\tconst personName = persons.find(person => person.id === id).name\n\t\tconst result = window.confirm(`Delete ${personName}?`)\n\n\t\tif (result) {\n\t\t\tpersonService.del(id).then(() => {\n\t\t\t\tsetPersons(persons.filter(person => person.id !== id))\n\t\t\t\tshowNotification(`Deleted ${personName}`, false)\n\t\t\t}).catch(error => {\n\t\t\t\tsetPersons(persons.filter(person => person.id !== id))\n\t\t\t\tshowNotification(`Information of ${personName} has already been removed from server`, true)\n\t\t\t})\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Phonebook</h2>\n\t\t\t<Notification notification={notification} />\n\t\t\t<Filter handleChange={event => setFilter(event.target.value)} />\n\t\t\t<h2>add a new</h2>\n\t\t\t<PersonForm handleNameChange={handleNameChange}\n\t\t\t\thandleNumberChange={handleNumberChange} addPerson={addPerson} />\n\t\t\t<h2>Numbers</h2>\n\t\t\t<Persons persons={persons} filter={filter} deleteHandler={deletePerson} />\n\t\t</div>\n\t)\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}